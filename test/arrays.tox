v: vec<integer>[10]

munus sm(x: integer, v: &integer) {
    v[1-1] = x + 1
    v[2-1] = x + 2
    v[3-1] = x + 3
    v[4-1] = x + 4
    v[5-1] = x + 5
    v[6-1] = x + 6
    v[7-1] = x + 7
    v[8-1] = x + 8
    v[9-1] = x + 9
    v[10-1] = x + 10

    reditus;
}

munus main(){
    arr: vec<integer>[10]

    enim(x: integer; x < 10; x = x + 1) {
        arr[x] = x
    }

    enim(x: integer; x < 10; x = x + 1) {
        imprimo(arr[x], "\n")
    }

    enim(x:integer; x<10; x = x + 1) {
        y: vec<integer>[10]
        enim(x_:integer = x; x_<10 && x > 0; x_ = x_ + 1) {
            y[x_] = x
        }

        enim(x_:integer = x; x_<10; x_ = x_ + 1) {
            imprimo(y[x_], " ")
        }
        imprimo("\n")
    }

    enim(x: integer; x < 2; x = x + 1){
        a: vec<integer> = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

        imprimo(x, ": ")
        enim(x: integer; x < 10; x = x + 1){
            imprimo(a[x], " ")
        }
        imprimo("\n")
    }

    imprimo("First a\n")
    a: vec<integer> = [5 ... 15]
    enim(q: integer; q < 10; q = q + 1){
        imprimo(a[q], "\n")
    }

    imprimo("a is now arr\n")
    p: &integer = arr
    enim(q: integer; q < 10; q = q + 1){
        si q == 5 {
            continue
        }
        imprimo(p[q], "\n")
    }

    sm(0,v)
    enim(i: integer; i < 10; i = i + 1){
        imprimo(v[i], " ")
    }
    imprimo("\n")
}